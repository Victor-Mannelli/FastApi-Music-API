services:
  db:
    image: postgres:latest
    container_name: musicdb
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DATABASE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U '${POSTGRES_USERNAME}' -d '${POSTGRES_DATABASE}'"]
      interval: 5s
      retries: 5
      timeout: 3s
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  app:
    build: .
    container_name: fastapi-app
    restart: always
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      ALGORITHM: ${ALGORITHM}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
    command: [
      "/bin/sh", 
      "-c", 
      "until pg_isready -h db -U '${POSTGRES_USERNAME}' -d '${POSTGRES_DATABASE}'; 
      do echo 'Waiting for database...'; 
      sleep 2; 
      done && alembic upgrade head &&
      uvicorn app.main:app --host 0.0.0.0 --port 8000"
    ]

volumes:
  postgres_data:

networks:
  backend:
    driver: bridge
